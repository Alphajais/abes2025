1->
#include <iostream>
using namespace std;
int main() {
    int n = 5; 

    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n - i; j++) {
            cout << " ";
        }
        for (int j = 1; j <= 2 * i - 1; j++) {
            cout << "*";
        }
        cout << endl;
    }
    for (int i = n - 1; i >= 1; i--) {
        for (int j = 1; j <= n - i; j++) {
            cout << " ";
        }

        for (int j = 1; j <= 2 * i - 1; j++) {
            cout << "*";
        }

        cout << endl;
    }

    return 0;
}
/////////////////
2->
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> rearrangeArray(vector<int>& nums) {
    int largestPrime = -1, smallestPrime = -1;
    for (int num : nums) {
        if (isPrime(num)) {
            largestPrime = max(largestPrime, num);
            smallestPrime = min(smallestPrime, num);
        }
    }
    vector<int> remainingNums;
    for (int num : nums) {
        if (num != largestPrime && num != smallestPrime) {
            remainingNums.push_back(num);
        }
    }
    sort(remainingNums.begin(), remainingNums.end(), greater<int>());
    vector<int> result;
    result.push_back(largestPrime);
    for (int num : remainingNums) {
        result.push_back(num);
    }
    result.push_back(smallestPrime);

    return result;
}
bool isPrime(int num) {
    if (num <= 1) {
        return false;
    }
    for (int i = 2; i * i <= num; ++i) {
        if (num % i == 0) {
            return false;
        }
    }
    return true;
}

int main() {
    vector<int> nums = {5, 1, 8, 11, 2};
    vector<int> rearranged = rearrangeArray(nums);

    cout << "Original array: ";
    for (int num : nums) {
        cout << num << " ";
    }
    cout << endl;

    cout << "Rearranged array: ";
    for (int num : rearranged) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}
